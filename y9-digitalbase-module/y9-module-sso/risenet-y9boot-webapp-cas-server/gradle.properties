# This overlay project's version
# For consistency and with no other effect, this is set to the CAS version itself.
version=7.2.1

# This is the CAS server version that will be deployed.
# Versions typically are in the format of:
#   [Major].[Minor].[Patch].[Security]
# For patch and security releases and unless explicitly stated otherwise, the below property
# and NOTHING ELSE is the only change you usually need to make to upgrade your CAS deployment.
cas.version=7.2.1

# The Spring Boot version is very much tied to the CAS release 7.2.0-RC4
# and must not be modified or upgraded out of band, as doing so would most likely
# jeopardize the stability of your CAS deployment leading to unpredictable behavior.
springBootVersion=3.4.4

# y9 add
springVersion=6.2.5
theme=y9-apereo

# The coordinates of this overlay project
group=org.apereo.cas
artifactId=cas-overlay

# Before changing the JDK versions here, you must account for the following:
# - Dependency Compatibility: Ensure that all libraries and frameworks you use are compatible with Java 21 and above.
# - Environment Compatibility: Check that your deployment environments (e.g., servers, CI/CD pipelines, cloud services) support Java 21 and above.
# Remember that this CAS build does and will only officially support Java 21. Do NOT change platform requirements unless
# you really know what you are doing and are comfortable managing the deployment and its risks completely on your own.

# This property defines the version of Java that your source code is written in.
# It ensures that your code is compatible with the specified version of the Java language.
# Gradle will expect your source code to be compatible with JDK 21.
sourceCompatibility=21

# This property specifies the version of the Java runtime that the compiled bytecode should be compatible with.
# It ensures that the bytecode generated by the compiler will run on JDK 21.
targetCompatibility=21

# This property controls the JVM vendor that is used by Gradle toolchains.
# You may want to build CAS using a Java version that is not supported for running Gradle
# by setting this property to the vendor of the JDK you want to use.
# If Gradle canâ€™t find a locally available toolchain that matches the requirements 
# of the build, it can automatically download one.
# Options include: AMAZON, ADOPTIUM, JETBRAINS, MICROSOFT, ORACLE, SAP, BELLSOFT, etc.
# Setting this to a blank or invalid value will force Gradle to use the JDK installation on the build machine.
jvmVendor=ADOPTIUM

# This plugin controls how JDK distributions required by the Grtadle toolchain
# are discovered, and downloaded when necessary.
# Note that auto-provisioning of a JDK distribution only kicks in when auto-detection fails 
# to find a matching JDK, and auto-provisioning can only download new JDKs and is in no way 
# involved in updating any of the already installed ones.
gradleFoojayPluginVersion=0.9.0

gradleFreeFairPluginVersion=8.13.1

# Used to build Docker images
jibVersion=3.4.5
gradleDockerPluginVersion=9.4.0

# Specify the coordinates of the container image to build
containerImageOrg=apereo
containerImageName=cas

baseDockerImage=azul/zulu-openjdk:21
allowInsecureRegistries=false

# Multiple platforms may be specified, separated by a comma i.e amd64:linux,arm64:linux
dockerImagePlatform=amd64:linux

# Include a launch script for executable WAR artifact
# Setting this to true allows the final web application
# to be fully executable on its own.
executable=true


# Use -tomcat, -jetty, -undertow for deployment to control the embedded server container
# that will be used to deploy and manage your CAS deployment.
# You should set this to blank if you want to deploy to an external container.
# and want to set up, download and manage the container (i.e. Apache Tomcat) yourself.
appServer=-tomcat

# If you are using an embedded Apache Tomcat container to deploy and run CAS,
# and need to override the Apache Tomcat version, uncomment the property below
# and specify the the Apache Tomcat version, i.e. 10.1.34.
# While enabled, this will override any and all upstream changes to
# Apache Tomcat dependency management and you will be directly responsible to make
# adjustments and upgrades as necessary. Use with caution, favor less work.
# tomcatVersion=10.1.34

# Settings to generate a keystore
# used by the build to assist with creating
# self-signed certificates for TLS
certDir=/etc/cas
serverKeystore=thekeystore
exportedServerCert=cas.crt
storeType=PKCS12
# y9 added
certificateDn=CN=vue.youshengyun.com,OU=y9,OU=risesoft,C=CN
certificateSubAltName=dns:vue.youshengyun.com,dns:localhost,ip:127.0.0.1
certValidity=3650

# Location of the downloaded CAS Shell JAR
shellDir=build/libs
ivyVersion=2.5.2
gradleDownloadTaskVersion=4.1.1

# Include private repository
# override these in user properties or pass in values from env on command line
privateRepoUrl=
privateRepoUsername=

# Gradle build settings
# Do NOT modify unless you know what you're doing!
org.gradle.configureondemand=true
org.gradle.caching=true
org.gradle.parallel=true
org.gradle.jvmargs=-Xms1024m -Xmx4048m -XX:TieredStopAtLevel=1
org.gradle.unsafe.configuration-cache=false
org.gradle.unsafe.configuration-cache-problems=warn
systemProp.org.gradle.internal.http.connectionTimeout=60000
systemProp.org.gradle.internal.http.requestTimeout=120000
